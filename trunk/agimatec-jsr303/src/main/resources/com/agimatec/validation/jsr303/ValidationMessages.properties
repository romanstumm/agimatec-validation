# The properties listed below are resolved by the default message resolver.

# standard validation-api-1.0.Beta4
validator.pattern=must match "{regexp}"
validator.notNull=may not be null
validator.size=size must be between {min} and {max}
validator.length=length must be between {min} and {max}
validator.min=must be greater than or equal to {value}
validator.max=must be less than or equal to {value}
validator.null=must be null
validator.past=must be in the past
validator.future=must be in the future
validator.assertTrue=must be true
validator.assertFalse=must be false
validator.digits=numeric value out of bounds (<{integer} digits>.<{fraction} digits> expected)

# standard validation-api-1.0.CR1
constraint.pattern=must match "{regexp}"
constraint.notNull=may not be null
constraint.size=size must be between {min} and {max}
constraint.length=length must be between {min} and {max}
constraint.notEmpty=may not be empty
constraint.min=must be greater than or equal to {value}
constraint.max=must be less than or equal to {value}
constraint.null=must be null
constraint.past=must be in the past
constraint.future=must be in the future
constraint.assertTrue=must be true
constraint.assertFalse=must be false
constraint.digits=numeric value out of bounds (<{integer} digits>.<{fraction} digits> expected)

# agimatec additional built-ins
com.agimatec.validation.constraints.NotEmpty.message=may not be empty
com.agimatec.validation.constraints.Email.message=not a well-formed email address

## newer versions of validation-api (since 10.06.2009)
## have a changed name template in annotations (again!)
# 
# The properties listed below are resolved by the default message resolver.
# standard
javax.validation.constraints.NotNull.message=may not be null
javax.validation.constraints.Size.message=size must be between {min} and {max}
javax.validation.constraints.Pattern.message=must match "{regexp}"
javax.validation.constraints.Min.message=must be greater than or equal to {value}
javax.validation.constraints.Max.message=must be less than or equal to {value}
javax.validation.constraints.Null.message=must be null
javax.validation.constraints.Past.message=must be in the past
javax.validation.constraints.Future.message=must be in the future
javax.validation.constraints.AssertTrue.message=must be true
javax.validation.constraints.AssertFalse.message=must be false
javax.validation.constraints.Digits.message=numeric value out of bounds (<{integer} digits>.<{fraction} digits> expected)

